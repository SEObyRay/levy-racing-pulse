@import "tailwindcss";

/* Design tokens (HSL-based) */
:root {
  /* Brand */
  --racing-orange: 20 100% 50%;
  --racing-bg: 216 15% 8%;
  --racing-text: 0 0% 100%;
  --racing-ui: 210 7% 62%;
  --racing-accent: 72 100% 57%;

  /* Semantic tokens */
  --background: 216 15% 8%;
  --foreground: 0 0% 100%;

  --card: 216 15% 10%;
  --card-foreground: 0 0% 100%;

  --popover: 216 15% 12%;
  --popover-foreground: 0 0% 100%;

  --primary: 20 100% 50%;
  --primary-foreground: 0 0% 100%;

  --secondary: 216 15% 14%;
  --secondary-foreground: 0 0% 100%;

  --muted: 216 15% 14%;
  --muted-foreground: 210 7% 62%;

  --accent: 72 100% 57%;
  --accent-foreground: 216 15% 8%;

  --destructive: 0 84% 60%;
  --destructive-foreground: 0 0% 100%;

  --border: 216 15% 18%;
  --input: 216 15% 18%;
  --ring: 20 100% 50%;

  --radius: 0.75rem;

  /* Gradients & shadows */
  --gradient-hero: linear-gradient(135deg, hsl(20 100% 50% / 0.15) 0%, hsl(216 15% 8%) 100%);
  --gradient-orange: linear-gradient(135deg, hsl(20 100% 50%) 0%, hsl(20 100% 40%) 100%);
  --gradient-accent: linear-gradient(135deg, hsl(72 100% 57%) 0%, hsl(72 100% 47%) 100%);

  --shadow-orange: 0 10px 40px hsl(20 100% 50% / 0.3);
  --shadow-soft: 0 4px 20px hsl(0 0% 0% / 0.4);
  --shadow-hard: 0 8px 32px hsl(0 0% 0% / 0.6);
}

/* Map tokens to Tailwind v4 color system */
@theme inline {
  --color-background: hsl(var(--background));
  --color-foreground: hsl(var(--foreground));
  --color-card: hsl(var(--card));
  --color-card-foreground: hsl(var(--card-foreground));
  --color-popover: hsl(var(--popover));
  --color-popover-foreground: hsl(var(--popover-foreground));
  --color-primary: hsl(var(--primary));
  --color-primary-foreground: hsl(var(--primary-foreground));
  --color-secondary: hsl(var(--secondary));
  --color-secondary-foreground: hsl(var(--secondary-foreground));
  --color-muted: hsl(var(--muted));
  --color-muted-foreground: hsl(var(--muted-foreground));
  --color-accent: hsl(var(--accent));
  --color-accent-foreground: hsl(var(--accent-foreground));
  --color-destructive: hsl(var(--destructive));
  --color-destructive-foreground: hsl(var(--destructive-foreground));
  --color-border: hsl(var(--border));
  --color-input: hsl(var(--input));
  --color-ring: hsl(var(--ring));

  --font-sans: var(--font-body);
}

/* Base */
@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground antialiased;
    font-family: var(--font-body), ui-sans-serif, system-ui, -apple-system;
  }
  h1, h2, h3, h4, h5, h6 { @apply font-bold; }
  h1 { @apply text-4xl md:text-5xl lg:text-6xl tracking-tight; }
  h2 { @apply text-3xl md:text-4xl lg:text-5xl tracking-tight; }
  h3 { @apply text-2xl md:text-3xl tracking-tight; }
}

/* Utilities */
@layer utilities {
  .gradient-hero { background: var(--gradient-hero); }
  .gradient-orange { background: var(--gradient-orange); }
  .gradient-accent { background: var(--gradient-accent); }
  .shadow-orange { box-shadow: var(--shadow-orange); }
  .shadow-soft { box-shadow: var(--shadow-soft); }
  .shadow-hard { box-shadow: var(--shadow-hard); }
  .text-gradient-orange { -webkit-background-clip: text; background-clip: text; color: transparent; background-image: var(--gradient-orange); }
  .hover-lift { transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1); }
  .hover-lift:hover { transform: translateY(-0.25rem); }
  .hover-glow { transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1); }
  .hover-glow:hover { box-shadow: var(--shadow-orange); }
  .font-headline { font-family: var(--font-headline), ui-sans-serif, system-ui, -apple-system; }
  .font-body { font-family: var(--font-body), ui-sans-serif, system-ui, -apple-system; }
}
